# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

directive @fake(locale: fake__Locale, options: fake__options = {dateFormat: "YYYY-MM-DDTHH:mm:ss[Z]", dateFrom: "2010-01-01", dateTo: "2030-01-01", baseColor: {red255: 0, green255: 0, blue255: 0}}, type: fake__Types!) on SCALAR | FIELD_DEFINITION

directive @listLength(max: Int!, min: Int!) on FIELD_DEFINITION

directive @examples(values: [examples__JSON]!) on SCALAR | FIELD_DEFINITION

interface CustomInterface {
    id: ID!
    name: String!
}

union CustomUnion = City | Company | Country | Job

type City implements CustomInterface {
    country: Country!
    createdAt: DateTime!
    id: ID!
    jobs(after: String, before: String, first: Int, last: Int, orderBy: JobOrderByInput, skip: Int, where: JobWhereInput): [Job!]
    name: String!
    slug: String!
    type: String!
    updatedAt: DateTime!
}

type Commitment {
    createdAt: DateTime!
    id: ID!
    jobs(after: String, before: String, first: Int, last: Int, orderBy: JobOrderByInput, skip: Int, where: JobWhereInput): [Job!]
    slug: String!
    title: String!
    updatedAt: DateTime!
}

type Company implements CustomInterface {
    createdAt: DateTime!
    emailed: Boolean
    id: ID!
    jobs(after: String, before: String, first: Int, last: Int, orderBy: JobOrderByInput, skip: Int, where: JobWhereInput): [Job!]
    logoUrl: String
    name: String!
    slug: String!
    twitter: String
    updatedAt: DateTime!
    websiteUrl: String!
}

type Country implements CustomInterface {
    cities(after: String, before: String, first: Int, last: Int, orderBy: CityOrderByInput, skip: Int, where: CityWhereInput): [City!]
    createdAt: DateTime!
    id: ID!
    isoCode: String
    jobs(after: String, before: String, first: Int, last: Int, orderBy: JobOrderByInput, skip: Int, where: JobWhereInput): [Job!]
    name: String!
    slug: String!
    type: String!
    updatedAt: DateTime!
}

type Job {
    applyUrl: String
    cities(after: String, before: String, first: Int, last: Int, orderBy: CityOrderByInput, skip: Int, where: CityWhereInput): [City!]
    commitment: Commitment!
    company: Company
    countries(after: String, before: String, first: Int, last: Int, orderBy: CountryOrderByInput, skip: Int, where: CountryWhereInput): [Country!]
    createdAt: DateTime!
    description: String
    id: ID!
    isFeatured: Boolean
    isPublished: Boolean
    locationNames: String
    postedAt: DateTime!
    remotes(after: String, before: String, first: Int, last: Int, orderBy: RemoteOrderByInput, skip: Int, where: RemoteWhereInput): [Remote!]
    slug: String!
    tags(after: String, before: String, first: Int, last: Int, orderBy: TagOrderByInput, skip: Int, where: TagWhereInput): [Tag!]
    title: String!
    updatedAt: DateTime!
    userEmail: String
}

type Location {
    id: ID!
    name: String!
    slug: String!
    type: String!
}

type Mutation {
    postJob(input: PostJobInput!): Job!
    subscribe(input: SubscribeInput!): User!
    updateCompany(adminSecret: String!, input: UpdateCompanyInput!): Company!
    updateJob(adminSecret: String!, input: UpdateJobInput!): Job!
}

type Query {
    cities: [City!]!
    city(input: LocationInput!): City!
    commitments: [Commitment!]!
    companies: [Company!]!
    countries: [Country!]!
    country(input: LocationInput!): Country!
    interfaces(input: InterfaceInput): [CustomInterface!]!
    job(input: JobInput!): Job!
    jobs(input: JobsInput): [Job!]!
    locations(input: LocationsInput!): [Location!]!
    remote(input: LocationInput!): Remote!
    remotes: [Remote!]!
    unions(input: UnionInput): [CustomUnion!]!
}

type Remote {
    createdAt: DateTime!
    id: ID!
    jobs(after: String, before: String, first: Int, last: Int, orderBy: JobOrderByInput, skip: Int, where: JobWhereInput): [Job!]
    name: String!
    slug: String!
    type: String!
    updatedAt: DateTime!
}

type Tag {
    createdAt: DateTime!
    id: ID!
    jobs(after: String, before: String, first: Int, last: Int, orderBy: JobOrderByInput, skip: Int, where: JobWhereInput): [Job!]
    name: String!
    slug: String!
    updatedAt: DateTime!
}

type User {
    createdAt: DateTime!
    email: String!
    id: ID!
    name: String
    subscribe: Boolean!
    updatedAt: DateTime!
}

enum CityOrderByInput {
    createdAt_ASC
    createdAt_DESC
    id_ASC
    id_DESC
    name_ASC
    name_DESC
    slug_ASC
    slug_DESC
    type_ASC
    type_DESC
    updatedAt_ASC
    updatedAt_DESC
}

enum CountryOrderByInput {
    createdAt_ASC
    createdAt_DESC
    id_ASC
    id_DESC
    isoCode_ASC
    isoCode_DESC
    name_ASC
    name_DESC
    slug_ASC
    slug_DESC
    type_ASC
    type_DESC
    updatedAt_ASC
    updatedAt_DESC
}

enum JobOrderByInput {
    applyUrl_ASC
    applyUrl_DESC
    createdAt_ASC
    createdAt_DESC
    description_ASC
    description_DESC
    id_ASC
    id_DESC
    isFeatured_ASC
    isFeatured_DESC
    isPublished_ASC
    isPublished_DESC
    locationNames_ASC
    locationNames_DESC
    postedAt_ASC
    postedAt_DESC
    slug_ASC
    slug_DESC
    title_ASC
    title_DESC
    updatedAt_ASC
    updatedAt_DESC
    userEmail_ASC
    userEmail_DESC
}

enum RemoteOrderByInput {
    createdAt_ASC
    createdAt_DESC
    id_ASC
    id_DESC
    name_ASC
    name_DESC
    slug_ASC
    slug_DESC
    type_ASC
    type_DESC
    updatedAt_ASC
    updatedAt_DESC
}

enum TagOrderByInput {
    createdAt_ASC
    createdAt_DESC
    id_ASC
    id_DESC
    name_ASC
    name_DESC
    slug_ASC
    slug_DESC
    updatedAt_ASC
    updatedAt_DESC
}

enum fake__Locale {
    az
    cz
    de
    de_AT
    de_CH
    en
    en_AU
    en_BORK
    en_CA
    en_GB
    en_IE
    en_IND
    en_US
    en_au_ocker
    es
    es_MX
    fa
    fr
    fr_CA
    ge
    id_ID
    it
    ja
    ko
    nb_NO
    nep
    nl
    pl
    pt_BR
    ru
    sk
    sv
    tr
    uk
    vi
    zh_CN
    zh_TW
}

enum fake__Types {
    "An URL for an avatar"
    avatarUrl
    bankIdentifierCode
    bitcoinAddress
    city
    "Configure color with option: `baseColor`"
    colorHex
    colorName
    companyBS
    companyCatchPhrase
    companyName
    country
    countryCode
    county
    currencyCode
    currencyName
    currencySymbol
    """

    By default returns dates beetween 2000-01-01 and 2030-01-01.
    Configure date format with options `dateFormat` `dateFrom` `dateTo`.
    """
    date
    dbCollation
    dbColumn
    dbEngine
    dbType
    domainName
    "Configure email provider with option: `emailProvider`"
    email
    fileExtension
    filename
    financeAccountName
    financeTransactionType
    firstName
    fullName
    "Configure date format with option `dateFormat`"
    futureDate
    hackerAbbreviation
    hackerPhrase
    "An image url. Configure image with options: `imageCategory`, `imageWidth`, `imageHeight` and `randomizeImageUrl`"
    imageUrl
    internationalBankAccountNumber
    ipv4Address
    ipv6Address
    jobTitle
    lastName
    latitude
    locale
    longitude
    "Lorem Ipsum text. Configure size with option `loremSize`"
    lorem
    macAddress
    mimeType
    "Sum of money. Configure with options `minMoney`/`maxMoney` and 'decimalPlaces'."
    money
    number
    "Configure password with option `passwordLength`"
    password
    "Configure date format with option `dateFormat`"
    pastDate
    phoneNumber
    product
    productCategory
    productMaterial
    productName
    "Configure date format with option `dateFormat`"
    recentDate
    secondaryAddress
    semver
    state
    stateAbbr
    "Configure address with option `useFullAddress`"
    streetAddress
    streetName
    url
    userAgent
    uuid
    word
    words
    zipCode
}

enum fake__loremSize {
    paragraph
    paragraphs
    sentence
    sentences
    word
    words
}

scalar DateTime

scalar examples__JSON

input CityWhereInput {
    AND: [CityWhereInput!]
    NOT: [CityWhereInput!]
    OR: [CityWhereInput!]
    country: CountryWhereInput
    createdAt: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    createdAt_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_not: DateTime
    createdAt_not_in: [DateTime!]
    id: ID
    id_contains: ID
    id_ends_with: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_contains: ID
    id_not_ends_with: ID
    id_not_in: [ID!]
    id_not_starts_with: ID
    id_starts_with: ID
    jobs_every: JobWhereInput
    jobs_none: JobWhereInput
    jobs_some: JobWhereInput
    name: String
    name_contains: String
    name_ends_with: String
    name_gt: String
    name_gte: String
    name_in: [String!]
    name_lt: String
    name_lte: String
    name_not: String
    name_not_contains: String
    name_not_ends_with: String
    name_not_in: [String!]
    name_not_starts_with: String
    name_starts_with: String
    slug: String
    slug_contains: String
    slug_ends_with: String
    slug_gt: String
    slug_gte: String
    slug_in: [String!]
    slug_lt: String
    slug_lte: String
    slug_not: String
    slug_not_contains: String
    slug_not_ends_with: String
    slug_not_in: [String!]
    slug_not_starts_with: String
    slug_starts_with: String
    type: String
    type_contains: String
    type_ends_with: String
    type_gt: String
    type_gte: String
    type_in: [String!]
    type_lt: String
    type_lte: String
    type_not: String
    type_not_contains: String
    type_not_ends_with: String
    type_not_in: [String!]
    type_not_starts_with: String
    type_starts_with: String
    updatedAt: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_not: DateTime
    updatedAt_not_in: [DateTime!]
}

input CommitmentWhereInput {
    AND: [CommitmentWhereInput!]
    NOT: [CommitmentWhereInput!]
    OR: [CommitmentWhereInput!]
    createdAt: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    createdAt_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_not: DateTime
    createdAt_not_in: [DateTime!]
    id: ID
    id_contains: ID
    id_ends_with: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_contains: ID
    id_not_ends_with: ID
    id_not_in: [ID!]
    id_not_starts_with: ID
    id_starts_with: ID
    jobs_every: JobWhereInput
    jobs_none: JobWhereInput
    jobs_some: JobWhereInput
    slug: String
    slug_contains: String
    slug_ends_with: String
    slug_gt: String
    slug_gte: String
    slug_in: [String!]
    slug_lt: String
    slug_lte: String
    slug_not: String
    slug_not_contains: String
    slug_not_ends_with: String
    slug_not_in: [String!]
    slug_not_starts_with: String
    slug_starts_with: String
    title: String
    title_contains: String
    title_ends_with: String
    title_gt: String
    title_gte: String
    title_in: [String!]
    title_lt: String
    title_lte: String
    title_not: String
    title_not_contains: String
    title_not_ends_with: String
    title_not_in: [String!]
    title_not_starts_with: String
    title_starts_with: String
    updatedAt: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_not: DateTime
    updatedAt_not_in: [DateTime!]
}

input CompanyWhereInput {
    AND: [CompanyWhereInput!]
    NOT: [CompanyWhereInput!]
    OR: [CompanyWhereInput!]
    createdAt: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    createdAt_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_not: DateTime
    createdAt_not_in: [DateTime!]
    emailed: Boolean
    emailed_not: Boolean
    id: ID
    id_contains: ID
    id_ends_with: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_contains: ID
    id_not_ends_with: ID
    id_not_in: [ID!]
    id_not_starts_with: ID
    id_starts_with: ID
    jobs_every: JobWhereInput
    jobs_none: JobWhereInput
    jobs_some: JobWhereInput
    logoUrl: String
    logoUrl_contains: String
    logoUrl_ends_with: String
    logoUrl_gt: String
    logoUrl_gte: String
    logoUrl_in: [String!]
    logoUrl_lt: String
    logoUrl_lte: String
    logoUrl_not: String
    logoUrl_not_contains: String
    logoUrl_not_ends_with: String
    logoUrl_not_in: [String!]
    logoUrl_not_starts_with: String
    logoUrl_starts_with: String
    name: String
    name_contains: String
    name_ends_with: String
    name_gt: String
    name_gte: String
    name_in: [String!]
    name_lt: String
    name_lte: String
    name_not: String
    name_not_contains: String
    name_not_ends_with: String
    name_not_in: [String!]
    name_not_starts_with: String
    name_starts_with: String
    slug: String
    slug_contains: String
    slug_ends_with: String
    slug_gt: String
    slug_gte: String
    slug_in: [String!]
    slug_lt: String
    slug_lte: String
    slug_not: String
    slug_not_contains: String
    slug_not_ends_with: String
    slug_not_in: [String!]
    slug_not_starts_with: String
    slug_starts_with: String
    twitter: String
    twitter_contains: String
    twitter_ends_with: String
    twitter_gt: String
    twitter_gte: String
    twitter_in: [String!]
    twitter_lt: String
    twitter_lte: String
    twitter_not: String
    twitter_not_contains: String
    twitter_not_ends_with: String
    twitter_not_in: [String!]
    twitter_not_starts_with: String
    twitter_starts_with: String
    updatedAt: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_not: DateTime
    updatedAt_not_in: [DateTime!]
    websiteUrl: String
    websiteUrl_contains: String
    websiteUrl_ends_with: String
    websiteUrl_gt: String
    websiteUrl_gte: String
    websiteUrl_in: [String!]
    websiteUrl_lt: String
    websiteUrl_lte: String
    websiteUrl_not: String
    websiteUrl_not_contains: String
    websiteUrl_not_ends_with: String
    websiteUrl_not_in: [String!]
    websiteUrl_not_starts_with: String
    websiteUrl_starts_with: String
}

input CountryWhereInput {
    AND: [CountryWhereInput!]
    NOT: [CountryWhereInput!]
    OR: [CountryWhereInput!]
    cities_every: CityWhereInput
    cities_none: CityWhereInput
    cities_some: CityWhereInput
    createdAt: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    createdAt_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_not: DateTime
    createdAt_not_in: [DateTime!]
    id: ID
    id_contains: ID
    id_ends_with: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_contains: ID
    id_not_ends_with: ID
    id_not_in: [ID!]
    id_not_starts_with: ID
    id_starts_with: ID
    isoCode: String
    isoCode_contains: String
    isoCode_ends_with: String
    isoCode_gt: String
    isoCode_gte: String
    isoCode_in: [String!]
    isoCode_lt: String
    isoCode_lte: String
    isoCode_not: String
    isoCode_not_contains: String
    isoCode_not_ends_with: String
    isoCode_not_in: [String!]
    isoCode_not_starts_with: String
    isoCode_starts_with: String
    jobs_every: JobWhereInput
    jobs_none: JobWhereInput
    jobs_some: JobWhereInput
    name: String
    name_contains: String
    name_ends_with: String
    name_gt: String
    name_gte: String
    name_in: [String!]
    name_lt: String
    name_lte: String
    name_not: String
    name_not_contains: String
    name_not_ends_with: String
    name_not_in: [String!]
    name_not_starts_with: String
    name_starts_with: String
    slug: String
    slug_contains: String
    slug_ends_with: String
    slug_gt: String
    slug_gte: String
    slug_in: [String!]
    slug_lt: String
    slug_lte: String
    slug_not: String
    slug_not_contains: String
    slug_not_ends_with: String
    slug_not_in: [String!]
    slug_not_starts_with: String
    slug_starts_with: String
    type: String
    type_contains: String
    type_ends_with: String
    type_gt: String
    type_gte: String
    type_in: [String!]
    type_lt: String
    type_lte: String
    type_not: String
    type_not_contains: String
    type_not_ends_with: String
    type_not_in: [String!]
    type_not_starts_with: String
    type_starts_with: String
    updatedAt: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_not: DateTime
    updatedAt_not_in: [DateTime!]
}

input InterfaceInput {
    default: Boolean! = true
    id: ID!
}

input JobInput {
    companySlug: String!
    jobSlug: String!
}

input JobWhereInput {
    AND: [JobWhereInput!]
    NOT: [JobWhereInput!]
    OR: [JobWhereInput!]
    applyUrl: String
    applyUrl_contains: String
    applyUrl_ends_with: String
    applyUrl_gt: String
    applyUrl_gte: String
    applyUrl_in: [String!]
    applyUrl_lt: String
    applyUrl_lte: String
    applyUrl_not: String
    applyUrl_not_contains: String
    applyUrl_not_ends_with: String
    applyUrl_not_in: [String!]
    applyUrl_not_starts_with: String
    applyUrl_starts_with: String
    cities_every: CityWhereInput
    cities_none: CityWhereInput
    cities_some: CityWhereInput
    commitment: CommitmentWhereInput
    company: CompanyWhereInput
    countries_every: CountryWhereInput
    countries_none: CountryWhereInput
    countries_some: CountryWhereInput
    createdAt: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    createdAt_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_not: DateTime
    createdAt_not_in: [DateTime!]
    description: String
    description_contains: String
    description_ends_with: String
    description_gt: String
    description_gte: String
    description_in: [String!]
    description_lt: String
    description_lte: String
    description_not: String
    description_not_contains: String
    description_not_ends_with: String
    description_not_in: [String!]
    description_not_starts_with: String
    description_starts_with: String
    id: ID
    id_contains: ID
    id_ends_with: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_contains: ID
    id_not_ends_with: ID
    id_not_in: [ID!]
    id_not_starts_with: ID
    id_starts_with: ID
    isFeatured: Boolean
    isFeatured_not: Boolean
    isPublished: Boolean
    isPublished_not: Boolean
    locationNames: String
    locationNames_contains: String
    locationNames_ends_with: String
    locationNames_gt: String
    locationNames_gte: String
    locationNames_in: [String!]
    locationNames_lt: String
    locationNames_lte: String
    locationNames_not: String
    locationNames_not_contains: String
    locationNames_not_ends_with: String
    locationNames_not_in: [String!]
    locationNames_not_starts_with: String
    locationNames_starts_with: String
    postedAt: DateTime
    postedAt_gt: DateTime
    postedAt_gte: DateTime
    postedAt_in: [DateTime!]
    postedAt_lt: DateTime
    postedAt_lte: DateTime
    postedAt_not: DateTime
    postedAt_not_in: [DateTime!]
    remotes_every: RemoteWhereInput
    remotes_none: RemoteWhereInput
    remotes_some: RemoteWhereInput
    slug: String
    slug_contains: String
    slug_ends_with: String
    slug_gt: String
    slug_gte: String
    slug_in: [String!]
    slug_lt: String
    slug_lte: String
    slug_not: String
    slug_not_contains: String
    slug_not_ends_with: String
    slug_not_in: [String!]
    slug_not_starts_with: String
    slug_starts_with: String
    tags_every: TagWhereInput
    tags_none: TagWhereInput
    tags_some: TagWhereInput
    title: String
    title_contains: String
    title_ends_with: String
    title_gt: String
    title_gte: String
    title_in: [String!]
    title_lt: String
    title_lte: String
    title_not: String
    title_not_contains: String
    title_not_ends_with: String
    title_not_in: [String!]
    title_not_starts_with: String
    title_starts_with: String
    updatedAt: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_not: DateTime
    updatedAt_not_in: [DateTime!]
    userEmail: String
    userEmail_contains: String
    userEmail_ends_with: String
    userEmail_gt: String
    userEmail_gte: String
    userEmail_in: [String!]
    userEmail_lt: String
    userEmail_lte: String
    userEmail_not: String
    userEmail_not_contains: String
    userEmail_not_ends_with: String
    userEmail_not_in: [String!]
    userEmail_not_starts_with: String
    userEmail_starts_with: String
}

input JobsInput {
    slug: String
    type: String
}

input LocationInput {
    slug: String!
}

input LocationsInput {
    value: String!
}

input PostJobInput {
    applyUrl: String!
    commitmentId: ID!
    companyName: String!
    description: String!
    locationNames: String!
    title: String!
    userEmail: String!
}

input RemoteWhereInput {
    AND: [RemoteWhereInput!]
    NOT: [RemoteWhereInput!]
    OR: [RemoteWhereInput!]
    createdAt: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    createdAt_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_not: DateTime
    createdAt_not_in: [DateTime!]
    id: ID
    id_contains: ID
    id_ends_with: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_contains: ID
    id_not_ends_with: ID
    id_not_in: [ID!]
    id_not_starts_with: ID
    id_starts_with: ID
    jobs_every: JobWhereInput
    jobs_none: JobWhereInput
    jobs_some: JobWhereInput
    name: String
    name_contains: String
    name_ends_with: String
    name_gt: String
    name_gte: String
    name_in: [String!]
    name_lt: String
    name_lte: String
    name_not: String
    name_not_contains: String
    name_not_ends_with: String
    name_not_in: [String!]
    name_not_starts_with: String
    name_starts_with: String
    slug: String
    slug_contains: String
    slug_ends_with: String
    slug_gt: String
    slug_gte: String
    slug_in: [String!]
    slug_lt: String
    slug_lte: String
    slug_not: String
    slug_not_contains: String
    slug_not_ends_with: String
    slug_not_in: [String!]
    slug_not_starts_with: String
    slug_starts_with: String
    type: String
    type_contains: String
    type_ends_with: String
    type_gt: String
    type_gte: String
    type_in: [String!]
    type_lt: String
    type_lte: String
    type_not: String
    type_not_contains: String
    type_not_ends_with: String
    type_not_in: [String!]
    type_not_starts_with: String
    type_starts_with: String
    updatedAt: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_not: DateTime
    updatedAt_not_in: [DateTime!]
}

input SubscribeInput {
    email: String!
    name: String!
}

input TagWhereInput {
    AND: [TagWhereInput!]
    NOT: [TagWhereInput!]
    OR: [TagWhereInput!]
    createdAt: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    createdAt_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_not: DateTime
    createdAt_not_in: [DateTime!]
    id: ID
    id_contains: ID
    id_ends_with: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_contains: ID
    id_not_ends_with: ID
    id_not_in: [ID!]
    id_not_starts_with: ID
    id_starts_with: ID
    jobs_every: JobWhereInput
    jobs_none: JobWhereInput
    jobs_some: JobWhereInput
    name: String
    name_contains: String
    name_ends_with: String
    name_gt: String
    name_gte: String
    name_in: [String!]
    name_lt: String
    name_lte: String
    name_not: String
    name_not_contains: String
    name_not_ends_with: String
    name_not_in: [String!]
    name_not_starts_with: String
    name_starts_with: String
    slug: String
    slug_contains: String
    slug_ends_with: String
    slug_gt: String
    slug_gte: String
    slug_in: [String!]
    slug_lt: String
    slug_lte: String
    slug_not: String
    slug_not_contains: String
    slug_not_ends_with: String
    slug_not_in: [String!]
    slug_not_starts_with: String
    slug_starts_with: String
    updatedAt: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_not: DateTime
    updatedAt_not_in: [DateTime!]
}

input UnionInput {
    default: Boolean! = false
    id: ID!
}

input UpdateCompanyInput {
    id: ID!
    logoUrl: String!
}

input UpdateJobInput {
    description: String!
    id: ID!
}

input fake__color {
    blue255: Int = 0
    green255: Int = 0
    red255: Int = 0
}

input fake__imageSize {
    height: Int!
    width: Int!
}

input fake__options {
    "Only for type `colorHex`. [Details here](https://stackoverflow.com/a/43235/4989887)"
    baseColor: fake__color = {red255: 0, green255: 0, blue255: 0}
    "Only for types `*Date`. Example value: `YYYY MM DD`. [Full Specification](http://momentjs.com/docs/#/displaying/format/)"
    dateFormat: String = "YYYY-MM-DDTHH:mm:ss[Z]"
    "Only for types `betweenDate`. Example value: `1986-11-02`."
    dateFrom: String = "2010-01-01"
    "Only for types `betweenDate`. Example value: `2038-01-19`."
    dateTo: String = "2030-01-01"
    "Only for type `money`"
    decimalPlaces: Int
    "Only for type `email`"
    emailProvider: String
    "Only for type `imageUrl`. Example value: `[\"nature\", \"water\"]`."
    imageKeywords: [String!]
    "Only for type `imageUrl`"
    imageSize: fake__imageSize
    "Only for type `lorem`"
    loremSize: fake__loremSize
    "Only for type `money`"
    maxMoney: Float
    "Only for type `number`"
    maxNumber: Float
    "Only for type `money`"
    minMoney: Float
    "Only for type `number`"
    minNumber: Float
    "Only for type `password`"
    passwordLength: Int
    "Only for type `number`"
    precisionNumber: Float
    "Only for type `imageUrl`"
    randomizeImageUrl: Boolean
    "Only for type `streetAddress`"
    useFullAddress: Boolean
}
